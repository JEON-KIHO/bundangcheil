{"version":3,"sources":["store/userCheck/types.js","components/Users.jsx","store/userCheck/actions.js","components/MainPage.jsx","App.js","store/state.js","store/userCheck/reducer.js","store/rootReducer.js","store/store.js","index.js"],"names":["CHECK_USER","mapDispatchToProps","checkUser","userState","phone","name","type","connect","users","history","useState","setUserState","inputName","setInputName","inputPhone","setInputPhone","value","onChange","e","target","onClick","variable","axios","post","then","res","data","push","inputRef","useBarcode","options","background","width","height","textAlign","textMargin","fontSize","margin","fontOptions","ref","App","exact","path","component","Users","MainPage","usersState","usersReducer","state","action","rootReducer","combineReducers","middleware","logger","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAAaA,EAAa,a,wBCmDpBC,EAAqB,CACvBC,UAAY,SAACC,EAAWC,EAAOC,GAAnB,OClDS,SAACF,EAAWC,EAAOC,GACxC,MAAO,CACHC,KAAMN,EACNK,OACAD,QACAD,aD6CoCD,CAAUC,EAAWC,EAAOC,KAGzDE,eAVS,SAAC,GAAc,EAAZC,MACvB,MAAO,KAS6BP,EAAzBM,EAlDD,SAAC,GAA4B,IAA1BL,EAAyB,EAAzBA,UAAWO,EAAc,EAAdA,QAAc,EAEJC,oBAAS,GAFL,mBAEpBC,GAFoB,aAGJD,mBAAS,IAHL,mBAG/BE,EAH+B,KAGpBC,EAHoB,OAIFH,mBAAS,IAJP,mBAI/BI,EAJ+B,KAInBC,EAJmB,KA+BtC,OACI,gCACI,uBAAOT,KAAK,OAAOU,MAAQJ,EAAYK,SA3B1B,SAACC,GAClBL,EAAaK,EAAEC,OAAOH,UA2BlB,uBAAOV,KAAK,OAAOU,MAAQF,EAAaG,SAxB1B,SAAAC,GAClBH,EAAcG,EAAEC,OAAOH,UAwBnB,wBAAQV,KAAK,SAASc,QArBR,SAAAF,GAClB,IAAMG,EAAW,CACbhB,KAAMO,EACNR,MAAOU,GAGXQ,IAAMC,KAAK,0BAA2BF,GACjCG,MAAK,SAAAC,GACF,GAAGA,EAAIC,KAAKvB,UAAW,CACnB,IAAMuB,EAAOD,EAAIC,KACjBf,EAAac,EAAIC,KAAKvB,WACtBD,EAAUwB,EAAKvB,UAAWuB,EAAKtB,MAAOsB,EAAKrB,MAC3CI,EAAQkB,KAAK,cASrB,0B,QELGpB,eAPS,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACvB,MAAO,CACHJ,MAAOI,EAAMJ,MACbC,KAAMG,EAAMH,QAILE,EA/BE,SAAC,GAAqB,IAAnBH,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAEfuB,EAAaC,YAAW,CAC5Bb,MAAOZ,EACP0B,QAAS,CACLC,WAAY,OACZC,MAAO,EACPC,OAAQ,IACRC,UAAW,OACXC,WAAY,GACZC,SAAU,GACVC,OAAQ,GACRC,YAAa,UAVbV,SAcR,OACI,gCACI,4BAAKvB,IACL,qBAAKkC,IAAKX,UCLPY,MAbf,WACI,OACI,cAAC,IAAD,UACI,mCACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAYC,IAClC,cAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,QAAQC,UAAYE,Y,gBCX7CC,EAAa,CACtB3C,WAAW,EACXC,MAAO,GACPC,KAAM,ICaK0C,EAbM,WAAiC,IAAhCC,EAA+B,uDAAvBF,EAAYG,EAAW,uCACjD,OAAOA,EAAO3C,MACV,KAAKN,EACD,OAAO,2BACAgD,GADP,IAEI7C,UAAW8C,EAAO9C,UAClBC,MAAO6C,EAAO7C,MACdC,KAAM4C,EAAO5C,OAErB,QAAU,OAAO2C,ICLVE,EAJKC,0BAAgB,CAChC3C,MAAOuC,I,iCCELK,EAAa,CAACC,IAAQC,KAMbC,EAJDC,sBAAYN,EAAaO,8BACnCC,kBAAe,WAAf,EAAmBN,KCFvBO,IAASC,OACL,cAAC,IAAD,CAAUL,MAAQA,EAAlB,SACI,cAAC,IAAMM,WAAP,UACI,cAAC,EAAD,QAGRC,SAASC,eAAe,W","file":"static/js/main.f231c7e6.chunk.js","sourcesContent":["export const CHECK_USER = 'CHECK_USER'","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { checkUser } from \"../store\";\nimport axios from \"axios\";\n\nconst Users = ({ checkUser, history }) => {\n\n    const [userState, setUserState] = useState(false);\n    const [inputName, setInputName] = useState('');\n    const [inputPhone, setInputPhone] = useState('');\n\n    const onChangeName = (e) => {\n        setInputName(e.target.value)\n    }\n\n    const onChangePhone = e => {\n        setInputPhone(e.target.value)\n    }\n\n    const onClickButton = e => {\n        const variable = {\n            name: inputName,\n            phone: inputPhone\n        }\n\n        axios.post('/v2/api/users/checkUser', variable)\n            .then(res => {\n                if(res.data.userState) {\n                    const data = res.data\n                    setUserState(res.data.userState)\n                    checkUser(data.userState, data.phone, data.name)\n                    history.push('/main')\n                }\n            })\n    }\n\n    return (\n        <div>\n            <input type='text' value={ inputName } onChange={ onChangeName } />\n            <input type='text' value={ inputPhone } onChange={ onChangePhone } />\n            <button type='button' onClick={ onClickButton }>button</button>\n        </div>\n    )\n}\n\nconst mapStateToProps = ({ users }) => {\n    return {\n\n    }\n}\n\nconst mapDispatchToProps = {\n    checkUser : (userState, phone, name) => checkUser(userState, phone, name),\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Users)","import { CHECK_USER } from \"./types\";\n\nexport const checkUser = (userState, phone, name) => {\n    return {\n        type: CHECK_USER,\n        name,\n        phone,\n        userState\n    }\n}","import React, { useEffect, useState } from \"react\";\nimport { useBarcode } from 'react-barcodes';\nimport { connect } from \"react-redux\";\n\nconst MainPage = ({ phone, name }) => {\n\n    const { inputRef } = useBarcode({\n        value: phone,\n        options: {\n            background: '#fff',\n            width: 2,\n            height: 100,\n            textAlign: 'left',\n            textMargin: 10,\n            fontSize: 20,\n            margin: 20,\n            fontOptions: 'bold'\n        }\n    });\n\n    return (\n        <div>\n            <p>{ name }</p>\n            <svg ref={inputRef} />\n        </div>\n    )\n}\n\nconst mapStateToProps = ({ users }) => {\n    return {\n        phone: users.phone,\n        name: users.name\n    }\n}\n\nexport default connect(mapStateToProps)(MainPage)","import './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Users from \"./components/Users\";\nimport MainPage from \"./components/MainPage\";\n\nfunction App() {\n    return (\n        <Router>\n            <>\n                <Switch>\n                    <Route exact path='/' component={ Users } />\n                    <Route exact path='/main' component={ MainPage } />\n                </Switch>\n            </>\n        </Router>\n    );\n}\n\nexport default App;\n","export const usersState = {\n    userState: false,\n    phone: '',\n    name: '',\n}","import { CHECK_USER } from \"./types\";\nimport { usersState } from \"../state\";\n\nconst usersReducer = (state = usersState, action) => {\n    switch(action.type) {\n        case CHECK_USER :\n            return {\n                ...state,\n                userState: action.userState,\n                phone: action.phone,\n                name: action.name\n            }\n        default : return state\n    }\n}\n\nexport default usersReducer","import { combineReducers } from \"redux\";\nimport usersReducer from './userCheck/reducer';\n\nconst rootReducer = combineReducers({\n    users: usersReducer,\n})\n\nexport default rootReducer","import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./rootReducer\";\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst middleware = [logger, thunk]\n\nconst store = createStore(rootReducer, composeWithDevTools(\n    applyMiddleware(...middleware)\n))\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\n\nReactDOM.render(\n    <Provider store={ store }>\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}